<?php

namespace SFBCN\EventbriteBundle\Tests\Entity;

use SFBCN\EventbriteBundle\Entity\Organizer;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-05-09 at 08:25:04.
 */
class OrganizerTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var \SFBCN\EventbriteBundle\Entity\Organizer
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Organizer;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        $this->object = null;
    }

    /**
     * testToArray data provider
     *
     * @return array
     */
    public function toArrayDataProvider()
    {
        return array(
            array(),
            array(true)
        );
    }

    /**
     * @param bool $forUpdate
     *
     * @covers SFBCN\EventbriteBundle\Entity\Organizer::toArray
     */
    public function testToArray($forUpdate = false)
    {
        $this->object->setDescription('Test');
        $this->object->setName('test');
        $this->object->setUrl('http://www.test.com');

        if (false !== $forUpdate) {
            $this->object->setId(1);
        }

        $result = $this->object->toArray();

        $this->assertInternalType('array', $result);
        $this->assertArrayHasKey('description', $result);
        $this->assertEquals('Test', $result['description']);
        $this->assertArrayHasKey('name', $result);
        $this->assertEquals('test', $result['name']);
        $this->assertArrayHasKey('url', $result);
        $this->assertEquals('http://www.test.com', $result['url']);

        if (false !== $forUpdate) {
            $this->assertArrayHasKey('id', $result);
            $this->assertEquals(1, $result['id']);
        }
    }
}