<?php

namespace SFBCN\EventbriteBundle\Entity\Mapper;

use SFBCN\EventbriteBundle\Entity\Mapper\Atendee;
use SFBCN\EventbriteBundle\Eventbrite\Mapper;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-05-08 at 07:16:15.
 */
class AtendeeTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Atendee
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Atendee(new Mapper());
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        $this->object = null;
    }

    /**
     * @covers SFBCN\EventbriteBundle\Entity\Mapper\Atendee::map
     */
    public function testMap()
    {
        $entity = simplexml_load_string(<<<EOX
<?xml version="1.0" encoding="UTF-8" ?>
<attendee>
    <amount_paid>0.00</amount_paid>
    <barcode>85790187109272299001</barcode>
    <created>2012-05-07 15:15:01</created>
    <currency>USD</currency>
    <email>theunic@gmail.com</email>
    <event_id>3033452137</event_id>
    <first_name>Christian</first_name>
    <id>109272299</id>
    <last_name>Soronellas</last_name>
    <modified>2012-05-07 15:15:25</modified>
    <order_id>85790187</order_id>
    <order_type>Free Order</order_type>
    <quantity>1</quantity>
    <ticket_id>13780767</ticket_id>
</attendee>
EOX
        );

        $result = $this->object->map($entity);

        $this->assertInstanceOf('\SFBCN\EventbriteBundle\Entity\Atendee', $result);
        $this->assertEquals(0, $result->getAmountPaid());
        $this->assertEquals('85790187109272299001', $result->getBarcode());
        $this->assertEquals('2012-05-07 15:15:01', $result->getCreated()->format('Y-m-d H:i:s'));
        $this->assertEquals('USD', $result->getCurrency());
        $this->assertEquals('theunic@gmail.com', $result->getEmail());
        $this->assertEquals('3033452137', $result->getEventId());
        $this->assertEquals('Christian', $result->getFirstName());
        $this->assertEquals('109272299', $result->getId());
        $this->assertEquals('Soronellas', $result->getLastName());
        $this->assertEquals('2012-05-07 15:15:25', $result->getModified()->format('Y-m-d H:i:s'));
        $this->assertEquals('85790187', $result->getOrderId());
        $this->assertEquals('Free Order', $result->getOrderType());
        $this->assertEquals(1, $result->getQuantity());
        $this->assertEquals('13780767', $result->getTicketId());
    }
}
